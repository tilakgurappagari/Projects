{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","use","json","urlencoded","extended","ingredients","get","request","response","send","post","ingredient","body","text","status","error","ing","push","put","newtext","idFound","x","length","id","params","ingredientId","listen","console","log"],"mappings":";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,GAAG,GAAGF,OAAO,EAAjB;;AACA,IAAIG,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AAEAC,GAAG,CAACE,GAAJ,CAAQD,UAAU,CAACE,IAAX,EAAR;AACAH,GAAG,CAACE,GAAJ,CAAQD,UAAU,CAACG,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACA,IAAIC,WAAW,GAAG,CACd;AACI,QAAM,GADV;AAEI,UAAO;AAFX,CADc,EAKd;AACI,QAAM,GADV;AAEI,UAAO;AAFX,CALc,EASd;AACI,QAAM,GADV;AAEI,UAAO;AAFX,CATc,EAad;AACI,QAAM,GADV;AAEI,UAAO;AAFX,CAbc,CAAlB;AAoBAN,GAAG,CAACO,GAAJ,CAAQ,cAAR,EAAwB,UAASC,OAAT,EAAkBC,QAAlB,EAA2B;AAE/CA,EAAAA,QAAQ,CAACC,IAAT,CAAcJ,WAAd;AAEH,CAJD;AAOAN,GAAG,CAACW,IAAJ,CAAS,cAAT,EAAyB,UAASH,OAAT,EAAkBC,QAAlB,EAA2B;AAChD,MAAIG,UAAU,GAAGJ,OAAO,CAACK,IAAzB;;AACA,MAAI,CAACD,UAAD,IAAeA,UAAU,CAACE,IAAX,KAAkB,EAArC,EACI;AAACL,IAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBL,IAArB,CAA0B;AAACM,MAAAA,KAAK,EAAC;AAAP,KAA1B;AAAqE,GAD1E,MAEQ;AACAC,IAAAA,GAAG,CAACC,IAAJ,CAASN,UAAT;AACAH,IAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBL,IAArB,CAA0BO,GAA1B;AACH;AACR,CARD;AAUAjB,GAAG,CAACmB,GAAJ,CAAQ,4BAAR,EAAsC,UAASX,OAAT,EAAkBC,QAAlB,EAA2B;AAC/D;AACC,MAAIW,OAAO,GAAEZ,OAAO,CAACK,IAAR,CAAaC,IAA1B;;AACA,MAAI,CAACM,OAAD,IAAYA,OAAO,KAAG,EAA1B,EACA;AACIX,IAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBL,IAArB,CAA0B;AAACM,MAAAA,KAAK,EAAC;AAAP,KAA1B;AACH,GAHD,MAII;AACC,QAAIK,OAAO,GAAG,KAAd;;AACA,SAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAChB,WAAW,CAACiB,MAA7B,EAAqCD,CAAC,EAAtC,EACI;AACQ,UAAIL,GAAG,GAAEX,WAAW,CAACgB,CAAD,CAApB;;AACA,UAAGL,GAAG,CAACO,EAAJ,KAAUhB,OAAO,CAACiB,MAAR,CAAeC,YAA5B,EAAyC;AACrCpB,QAAAA,WAAW,CAACgB,CAAD,CAAX,CAAeR,IAAf,GAAoBM,OAApB;AACAC,QAAAA,OAAO,GAAC,IAAR;AACA;AAEH;AACR;;AAGD,QAAG,CAACA,OAAJ,EAAY;AACRZ,MAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB,EAAqBL,IAArB,CAA0B;AAACM,QAAAA,KAAK,EAAC;AAAP,OAA1B;AACH,KAFD,MAGI;AACJP,MAAAA,QAAQ,CAACC,IAAT,CAAcJ,WAAd;AAA4B;AAC/B;AAER,CA5BD;AA+BAN,GAAG,CAAC2B,MAAJ,CAAW,IAAX,EAAiB,YACjB;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,CAHD","sourcesContent":["var express = require('express');\r\nvar app = express();\r\nvar bodyParser = require('body-parser');\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended: false}));\r\nvar ingredients = [\r\n    {\r\n        \"id\": \"1\",\r\n        \"text\":\"eggs\"\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"text\":\"milk\"\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"text\":\"chicken\"\r\n    },\r\n    {\r\n        \"id\": \"4\",\r\n        \"text\":\"coffee\"\r\n    }\r\n];\r\n\r\n\r\napp.get('/ingredients', function(request, response){\r\n\r\n    response.send(ingredients);\r\n\r\n});\r\n\r\n \r\napp.post('/ingredients', function(request, response){\r\n    var ingredient = request.body;\r\n    if (!ingredient || ingredient.text===\"\")\r\n        {response.status(500).send({error:\"your ingredient must have text\"});}\r\n        else{\r\n            ing.push(ingredient);\r\n            response.status(200).send(ing);\r\n        }\r\n});\r\n\r\napp.put('/ingredients/:ingredientId', function(request, response){\r\n  // var ingredientId = request.params.id;\r\n   var newtext= request.body.text;\r\n   if( !newtext || newtext===\"\")\r\n   {\r\n       response.status(500).send({error:\"you must provide ingredient text\"});\r\n   }\r\n   else{\r\n        var idFound = false;\r\n        for( var x= 0; x<ingredients.length; x++)\r\n            {\r\n                    var ing =ingredients[x];\r\n                    if(ing.id=== request.params.ingredientId){\r\n                        ingredients[x].text=newtext;\r\n                        idFound=true;\r\n                        break;\r\n\r\n                    }\r\n            }\r\n\r\n\r\n            if(!idFound){\r\n                response.status(500).send({error:\"Ingredient ID not found\"});\r\n            }\r\n            else{\r\n            response.send(ingredients);}\r\n        }\r\n\r\n});\r\n\r\n\r\napp.listen(3000, function()\r\n{\r\n    console.log(\"api running on port 3000\");\r\n});"],"file":"server.dev.js"}